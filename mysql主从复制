mysql数据库主从简单配置

我是按照ecstore里的文档进行实验的，我没有多台服务器，在本地用docker环境搭建两台mysql进行实验
首先得准备两台版本一样的mysql

主从服务器分别作以下操作： 

修改主服务器master:
#vi /etc/my.cnf
[mysqld]
log-bin=mysql-bin   //[必须]启用二进制日志
server-id=1      //[必须]服务器唯一ID，默认是1，一般取IP最后一段

修改从服务器slave:
#vi /etc/my.cnf
[mysqld]
log-bin=mysql-bin   //[不是必须]启用二进制日志
server-id=2      //[必须]服务器唯一ID，默认是1，一般取IP最后一段

重启两台服务器的mysql
/etc/init.d/mysql restart

在主服务器上建立帐户并授权slave:
grant replication slave  on *.*  to '账号'@'从服务器IP' identified by '密码';  

我用的是docker容器，两个mysql账号都是root 我的mysql2表示从库
mysql> grant replication slave  on *.*  to 'root'@'mysql2' identified by '123456';
//一般不用root帐号，"%"表示所有客户端都可能连，只要帐号，密码正确，此处可用具体客户端IP代替，如192.168.145.1，加强安全。

登录主服务器的mysql，查询master的状态
mysql> show master status;
+------------------+----------+--------------+------------------+-------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------------+----------+--------------+------------------+-------------------+
| mysql-bin.000001 |      442 |              |                  |                   |
+------------------+----------+--------------+------------------+-------------------+
注：执行完此步骤后不要再操作主服务器MYSQL，防止主服务器状态值变化


配置从服务器Slave：
mysql>change master to master_host='192.168.145.1',master_user='主服务器用户名',master_password='主服务器密码',
     master_log_file='mysql-bin.000001',master_log_pos=442;   //注意不要断开，442数字前后无单引号。
在docker容器中这样写
mysql> change master to master_host='mysql',master_user='root',master_password='123456',master_log_file='mysql-bin.000001',master_log_pos=442;

Mysql>start slave;    //启动从服务器复制功能


检查从服务器复制功能状态：
mysql> show slave status\G
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: mysql       //主服务器地址，正常服务器应该是ip
                  Master_User: root
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql-bin.000001
          Read_Master_Log_Pos: 1345         //#同步读取二进制日志的位置，大于等于Exec_Master_Log_Pos 
               Relay_Log_File: edbac27986c0-relay-bin.000002
                Relay_Log_Pos: 1223
        Relay_Master_Log_File: mysql-bin.000001
             Slave_IO_Running: Yes         //此状态必须YES
            Slave_SQL_Running: Yes         //此状态必须YES
                .............

注：Slave_IO及Slave_SQL进程必须正常运行，即YES状态，否则都是错误的状态(如：其中一个NO均属错误)。

以上操作过程，主从服务器配置完成。


主服务器Mysql，建立数据库，并在这个库中建表插入一条数据：
mysql> create database test_db;
Query OK, 1 row affected (0.00 sec)

mysql> use test_db;
Database changed

mysql>  create table test_tb(id int(3),name char(10));
Query OK, 0 rows affected (0.00 sec)

mysql> insert into test_tb values(001,'test');
Query OK, 1 row affected (0.00 sec)

去从服务器Mysql查询：会有同样的数据库、数据表、数据


